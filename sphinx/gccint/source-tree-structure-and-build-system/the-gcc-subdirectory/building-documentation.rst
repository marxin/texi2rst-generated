..
  Copyright 1988-2022 Free Software Foundation, Inc.
  This is part of the GCC manual.
  For copying conditions, see the copyright.rst file.

.. _documentation:

Building Documentation
^^^^^^^^^^^^^^^^^^^^^^

The main GCC documentation is in the form of manuals in Texinfo
format.  These are installed in Info format; DVI versions may be
generated by :samp:`make dvi`, PDF versions by :samp:`make pdf`, and
HTML versions by :samp:`make html`.  In addition, some man pages are
generated from the Texinfo manuals, there are some other text files
with miscellaneous documentation, and runtime libraries have their own
documentation outside the :samp:`gcc` directory.  FIXME: document the
documentation for runtime libraries somewhere.

.. toctree::
  :maxdepth: 2

  texinfo-manuals
  man-page-generation
  miscellaneous-docs

.. _texinfo-manuals:

Texinfo Manuals
~~~~~~~~~~~~~~~

The manuals for GCC as a whole, and the C and C++ front ends, are in
files :samp:`doc/*.texi`.  Other front ends have their own manuals in
files :samp:`{language}/*.texi`.  Common files
:samp:`doc/include/*.texi` are provided which may be included in
multiple manuals; the following files are in :samp:`doc/include`:

:samp:`fdl.texi`
  The GNU Free Documentation License.

:samp:`funding.texi`
  The section 'Funding Free Software'.

:samp:`gcc-common.texi`
  Common definitions for manuals.

:samp:`gpl_v3.texi`
  The GNU General Public License.

:samp:`texinfo.tex`
  A copy of :samp:`texinfo.tex` known to work with the GCC manuals.

  DVI-formatted manuals are generated by :samp:`make dvi`, which uses
:command:`texi2dvi` (via the Makefile macro ``$(TEXI2DVI)``).
PDF-formatted manuals are generated by :samp:`make pdf`, which uses
:command:`texi2pdf` (via the Makefile macro ``$(TEXI2PDF)``).  HTML
formatted manuals are generated by :samp:`make html`.  Info
manuals are generated by :samp:`make info` (which is run as part of
a bootstrap); this generates the manuals in the source directory,
using :command:`makeinfo` via the Makefile macro ``$(MAKEINFO)``,
and they are included in release distributions.

Manuals are also provided on the GCC web site, in both HTML and
PostScript forms.  This is done via the script
:samp:`maintainer-scripts/update_web_docs_git`.  Each manual to be
provided online must be listed in the definition of ``MANUALS`` in
that file; a file :samp:`{name}.texi` must only appear once in the
source tree, and the output manual must have the same name as the
source file.  (However, other Texinfo files, included in manuals but
not themselves the root files of manuals, may have names that appear
more than once in the source tree.)  The manual file
:samp:`{name}.texi` should only include other files in its own
directory or in :samp:`doc/include`.  HTML manuals will be generated by
:samp:`makeinfo --html`, PostScript manuals by :command:`texi2dvi`
and :command:`dvips`, and PDF manuals by :command:`texi2pdf`.
All Texinfo files that are parts of manuals must
be version-controlled, even if they are generated files, for the
generation of online manuals to work.

The installation manual, :samp:`doc/install.texi`, is also provided on
the GCC web site.  The HTML version is generated by the script
:samp:`doc/install.texi2html`.

.. _man-page-generation:

Man Page Generation
~~~~~~~~~~~~~~~~~~~

Because of user demand, in addition to full Texinfo manuals, man pages
are provided which contain extracts from those manuals.  These man
pages are generated from the Texinfo manuals using
:samp:`contrib/texi2pod.pl` and :command:`pod2man`.  (The man page for
:command:`g++`, :samp:`cp/g++.1`, just contains a :samp:`.so` reference
to :samp:`gcc.1`, but all the other man pages are generated from
Texinfo manuals.)

Because many systems may not have the necessary tools installed to
generate the man pages, they are only generated if the
:samp:`configure` script detects that recent enough tools are
installed, and the Makefiles allow generating man pages to fail
without aborting the build.  Man pages are also included in release
distributions.  They are generated in the source directory.

Magic comments in Texinfo files starting :samp:`@c man` control what
parts of a Texinfo file go into a man page.  Only a subset of Texinfo
is supported by :samp:`texi2pod.pl`, and it may be necessary to add
support for more Texinfo features to this script when generating new
man pages.  To improve the man page output, some special Texinfo
macros are provided in :samp:`doc/include/gcc-common.texi` which
:samp:`texi2pod.pl` understands:

``@gcctabopt``
  Use in the form :samp:`@table @gcctabopt` for tables of options,
  where for printed output the effect of :samp:`@code` is better than
  that of :samp:`@option` but for man page output a different effect is
  wanted.

``@gccoptlist``
  Use for summary lists of options in manuals.

``@gol``
  Use at the end of each line inside :samp:`@gccoptlist`.  This is
  necessary to avoid problems with differences in how the
  :samp:`@gccoptlist` macro is handled by different Texinfo formatters.

  FIXME: describe the :samp:`texi2pod.pl` input language and magic
comments in more detail.

.. _miscellaneous-docs:

Miscellaneous Documentation
~~~~~~~~~~~~~~~~~~~~~~~~~~~

In addition to the formal documentation that is installed by GCC,
there are several other text files in the :samp:`gcc` subdirectory
with miscellaneous documentation:

:samp:`ABOUT-GCC-NLS`
  Notes on GCC's Native Language Support.  FIXME: this should be part of
  this manual rather than a separate file.

:samp:`ABOUT-NLS`
  Notes on the Free Translation Project.

.. envvar:: COPYING

  The GNU General Public License, Versions 2 and 3.

:samp:`COPYING.LIB` :samp:`COPYING3.LIB`
  The GNU Lesser General Public License, Versions 2.1 and 3.

:samp:`*ChangeLog*` :samp:`*/ChangeLog*`
  Change log files for various parts of GCC.

.. envvar:: LANGUAGES

  Details of a few changes to the GCC front-end interface.  FIXME: the
  information in this file should be part of general documentation of
  the front-end interface in this manual.

.. envvar:: ONEWS

  Information about new features in old versions of GCC.  (For recent
  versions, the information is on the GCC web site.)

:samp:`README.Portability`
  Information about portability issues when writing code in GCC.  FIXME:
  why isn't this part of this manual or of the GCC Coding Conventions?

  FIXME: document such files in subdirectories, at least :samp:`config`,
:samp:`c`, :samp:`cp`, :samp:`objc`, :samp:`testsuite`.

